# CounselFlow Deployment Configuration

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: counselflow
      POSTGRES_USER: counselflow_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - counselflow-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - counselflow-network

  # Backend API
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://counselflow_user:${POSTGRES_PASSWORD}@postgres:5432/counselflow
      REDIS_URL: redis://redis:6379
      SECRET_KEY: ${SECRET_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      WESTLAW_API_KEY: ${WESTLAW_API_KEY}
      LEXISNEXIS_API_KEY: ${LEXISNEXIS_API_KEY}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - counselflow-network

  # Frontend
  frontend:
    build: ./counselflow-app
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://backend:8000
      NEXT_PUBLIC_WS_URL: ws://backend:8000
    depends_on:
      - backend
    networks:
      - counselflow-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - counselflow-network

volumes:
  postgres_data:
  redis_data:

networks:
  counselflow-network:
    driver: bridge
